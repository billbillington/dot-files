[user]
  name  = William Billington
  email = william.billington@econsultancy.com

[alias]
  a   = add
  co  = checkout
  f   = fetch
  c  = commit -v
  ca  = commit -v --amend
  d   = diff
  ds  = diff --staged
  g   = grep -n
  # graph log of head branch
  l   = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(yellow)%an%Creset' --abbrev-commit --date=relative
  # graph log of all branches
  la   = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(yellow)%an%Creset' --abbrev-commit --all --date=relative
  p   = push
  ri  = rebase --interactive
  rc  = rebase --continue
  ra  = rebase --abort
  s   = status
  sh = show head

  # Shows log from master with numbers
  jl  = !sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr)%Creset %C(yellow)%ae%Creset\" master.. | cat -n'
  # Shows log for all commit all with numbers
  jla = !sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(red)%d%Creset %s %Cgreen(%cr)%Creset %C(yellow)%ae%Creset\" --graph -n 45 | cat -n'
  # Create fixup commit for line number (from jl)
  jfx = "!sh -c 'git commit -m \"fixup! $(if [[ $0 =~ ^[0-9]+$ ]]; then LINE=$(($0-1)); else LINE=0; fi; git log HEAD~$((LINE)) -1 --format='\\'%s'\\' $@)\"'"
  # Show commit for line number (from jl)
  jsh = "!sh -c 'if [[ $0 =~ ^[0-9]+$ ]]; then LINE=$(($0-1)); else LINE=0; fi; git show HEAD~$(($LINE))'"
[color]
  ui = true

[core]
  excludesfile = ~/.gitignore
  editor = vim

[github]
  user = billbillington

[init]
  templatedir = ~/.git_template
[merge]
  conflictstyle = diff3
